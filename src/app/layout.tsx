import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Link from "next/link";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

export const metadata: Metadata = {
  title: "Sphere",
  description: "Generated by Sphere app",
};

export default function RootLayout({ children }: { children: React.ReactNode }) {
  return (
    <html lang="pt-BR">
      <body className="flex h-screen overflow-hidden">
        {/* Sidebar */}
        <aside className="w-64 bg-white border-r p-4 flex flex-col">
          <h2 className="text-xl font-bold mb-6">VitaBox</h2>
          <nav className="flex-1 space-y-2">
            <Link href="/dashboard" className="block px-3 py-2 rounded hover:bg-gray-100">
              Dashboard
            </Link>
            <Link href="/pacientes" className="block px-3 py-2 rounded hover:bg-gray-100">
              Pacientes
            </Link>
            <Link href="/pacientes/novo" className="block px-3 py-2 rounded hover:bg-gray-100">
              Novo Paciente
            </Link>
            <Link href="/meal-plans" className="block px-3 py-2 rounded hover:bg-gray-100">
              Planos Alimentares
            </Link>
            <Link href="/meal-plans/novo" className="block px-3 py-2 rounded hover:bg-gray-100">
              Novo Plano
            </Link>
            <Link href="/agenda" className="block px-3 py-2 rounded hover:bg-gray-100">
              Agenda
            </Link>
            <Link href="/agenda/novo" className="block px-3 py-2 rounded hover:bg-gray-100">
              Nova Consulta
            </Link>
          </nav>
          {/* Logout or additional action */}
          <Link href="/login" className="mt-auto block px-3 py-2 text-red-600 hover:bg-gray-100 rounded">
            Sair
          </Link>
        </aside>

        {/* Main content area */}
        <main className="flex-1 overflow-auto">
          {children}
        </main>
      </body>
    </html>
  );
}
// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//       >
//         {children}
//       </body>
//     </html>
//   );
// }
// }